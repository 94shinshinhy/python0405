●데이터베이스 생성
mysql -u root -p
create database DB이름;

●데이터베이스 사용자 생성과 권한 주기
create user'계정이름'@'%' identified by '계정비밀번호';
grant all privilege on connectdb.* to connectuser@'%';
flush privileges;

●연결끊기
quit
exit

●버전과 현재 날짜 구하기
select version(), current_date;

●쿼리 이용 계산식의 결과 구하기
select SIN(PI()/4),(4+1)*5;

●입력하는 도중에 취소
\c

●DBMS에 존재하는 데이터베이스 확인하기
show databases;

●사용중인 데이터베이스 전환하기
use mydb;

●데이터베이스에 존재하는 테이블 목록 확인하기
show tables;

●테이블 생성과 값의 저장
-u connectuser -p connectdb < examples.sql
-u connectuser -p connectdb
show tables;

●테이블 구조를 확인하기 위한 DESCRIBE 명령
desc 테이블명;

●SELECT 구문 예제(전체 데이터 검색)
SELECT * FROM DEPARTMENT;

●SELECT 구문 예제(특정 컬럼 검색)
select 컬럼명,컬럼명,컬럼명 from 테이블명;

●SELECT 구문 예제(컬럼에 Alias부여하기)
select 컬럼명 as 이름, 컬럼명 as 이름 from 테이블명;

●SELECT 구문 예제(컬럼의 합성(Concatenation)
SELECT concat(컬럼명, '-', 컬럼명) AS '이름-이름' from 테이블명;

●SELECT 구문 예제(중복행의 제거)
select 컬럼명 from 테이블명;
select distinct 컬럼명 from 테이블명;

●SELECT 구문 예제(정렬하기)
SELECT(DISTINCT) 컬럼명(ALIAS) FROM 테이블명
-> ORDER BY 컬럼이나 표현식 (ASC 또는 DESC);
ASC : 오름차순 정렬, 기본값
DESC : 내림차순
select 컬럼명, 컬럼명 from 테이블명 order by 컬럼명;
ex)
 employee 테이블에서 직원의 사번(empno), 이름(name), 직업(job)를 출력하시오
 단, 이름을 기준으로 오름차순 정렬합니다.
 select empno, name, job from employee order by name;
 select empno as 사번, name as 이름, jab as 직업 from employee order by 이름;
ex)
 employee 테이블에서 직원의 사번(empno), 이름(name), 직업(job)를 출력하시오
 단, 이름을 기준으로 내림차순 정렬합니다.
 select empno, name, job from employee order by name desc;

●SELECT 구문 예제(특정 행 검색-where절)
ex)
 employee 테이블에서 고용일(hiredate)이 1981년 이전의 사원이름과 고용일을 출력하시오
 * 산술연산자
 select name, hiredate from employee where hiredate < '1981-01-01';
 * 논리연산자
 employee 테이블에서 부서번호가 30인 사원이름과 부서번호를 출력하시오
 select name, deptno from employee where deptno = 30;
 * IN 키워드
 employee 테이블에서 부서번호가 10 또는 30인 사원이름과 부서번호를 출력하시오
 select name, deptno from employee deptno in (10,30);
 * LIKE 키워드
 * 와일드 카드를 사용하여 특정 문자를 포함한 값에 대한 조건을 처리
 * %는 0에서부터 여러 개의 문자열을 나타냄
 * _는 단 하나의 문자를 나타내는 와일드 카드
 employee 테이블에서 이름에 'A'가 포함된 사원의 이름(name)과 직업(job) 출력
 select name, job from employee where name like '%A%';

●SELECT 구문 예제(함수의 사용)
*UCASE, UPPER : 대문자로
SELECT UPPER('SEoul'), UCASE('seOUL');
*LCASE,LOWER : 소문자로
SELECT LOWER('seOUL'), LCASE('seOUL');
*substring : 중간값 뽑기
SELECT SUBSTRING('Happy Day',3,2);
*LPAD, RPAD : 왼쪽 오른쪽에 문자 채우기
SELECT LPAD('hi', 5, '?'), LPAD('joe', 7, '*');
*TRIM, LTRIM, RTRIM
SELECT LTRIM(' hello '), RTRIM(' hello ');
SELECT TRIM(' hi '),TRIM(BOTH 'x' FROM 'xxxhixxx');
*ABS(x) : x의 절대값을 구합니다.
SELECT ABS(2), ABS(-2);
*MOD(n,m) % : n을 m으로 나눈 나머지 값을 출력합니다.
SELECT MOD(234,10), 253 % 7, MOD(29,9);
*FLOOR(x) : x보다 크지 않은 가장 큰 정수를 반환합니다. BIGINT로 자동 변환합니다.
*CEILING(x) : x보다 작지 않은 가장 작은 정수를 반환합니다.
*ROUND(x) : x에 가장 근접한 정수를 반환합니다.
*POW(x,y) POWER(x,y) : x의 y 제곱 승을 반환합니다.
*GREATEST(x,y,...) : 가장 큰 값을 반환합니다.
*LEAST(x,y,...) : 가장 작은 값을 반환합니다.
*CURDATE(),CURRENT_DATE : 오늘 날짜를 YYYY-MM-DD나 YYYYMMDD 형식으로 반환합니다.
*CURTIME(), CURRENT_TIME : 현재 시각을 HH:MM:SS나 HHMMSS 형식으로 반환합니다.
*NOW(), SYSDATE() , CURRENT_TIMESTAMP : 오늘 현시각을 YYYY-MM-DD HH:MM:SS나 YYYYMMDDHHMMSS 형식으로 반환합니다. 
*DATE_FORMAT(date,format) : 입력된 date를 format 형식으로 반환합니다.
*PERIOD_DIFF(p1,p2) : YYMM이나 YYYYMM으로 표기되는 p1과 p2의 차이 개월을 반환합니다.

●SELECT 구문(CAST 형변환)
select cast(now() as date);
select cast(1-2 as unsigned);

●SELECT 구문(그룹함수)
COUNT(expr) : non-NULL인 row의 숫자를 반환
COUNT(DISTINCT expr,[expr...]) : non-NULL인 중복되지 않은 row의 숫자를 반환
COUNT(*) : row의 숫자를 반환
AVG(expr) : expr의 평균값을 반환
MIN(expr) : expr의 최소값을 반환
MAX(expr) : expr의 최대값을 반환
SUM(expr) : expr의 합계를 반환
GROUP_CONCAT(expr) : 그룹에서 concatenated한 문자를 반환
VARIANCE(expr) : 분산
STDDEV(expr) : expr의 표준 편차를 반환

SELECT AVG(salary) , SUM(salary) FROM employee WHERE deptno = 30;
SELECT deptno, AVG(salary) , SUM(salary) FROM employee group by deptno;

●데이터 입력(INSERT문)
INSERT INTO 테이블명(필드1, 필드2, 필드3, 필드4, … ) 
        VALUES ( 필드1의 값, 필드2의 값, 필드3의 값, 필드4의 값, … )

INSERT INTO 테이블명
        VALUES ( 필드1의 값, 필드2의 값, 필드3의 값, 필드4의 값, … )

●데이터 입력 실습(INSERT문)
예제 : ROLE테이블에 role_id는 200, description에는 'CEO'로 한건의 데이터를 저장
insert into ROLE (role_id, description) values ( 200, 'CEO');

●데이터 수정(UPDATE문)
UPDATE  테이블명
        SET  필드1=필드1의값, 필드2=필드2의값, 필드3=필드3의값, …
   WHERE  조건식

●데이터 수정 실습(UPDATE문)
update ROLE set description = 'CTO' where role_id = 200;

●데이터 삭제(DELETE문)
DELETE FROM 테이블명 WHERE 조건식

●데이터 삭제 실습(DELETE문)
예제 : ROLE테이블에서 role_id는 200인 정보를 삭제
delete from role where role_id = 200;

●테이블 생성
create table 테이블명(
    필드명1 타입 [null | not null] [default] [auto_increment],
    필드명2 타입 [null | not null] [default] [auto_increment]
    ....
    primarykey(필드명)

●테이블 생성 실습
CREATE TABLE EMPLOYEE2(   
            empno      INTEGER NOT NULL PRIMARY KEY,  
           name       VARCHAR(10),   
           job        VARCHAR(9),   
           boss       INTEGER,   
           hiredate   VARCHAR(12),   
           salary     DECIMAL(7, 2),   
           comm       DECIMAL(7, 2),   
          deptno     INTEGER);

●테이블 수정 (컬럼 추가 / 삭제)
alter table 테이블명
    add 필드명 타입 [null | not null] [default] [auto_increment];
alter table 테이블명
    drop 필드명;

●테이블 수정 실습 (컬럼 추가)
alter table EMPLOYEE2
    add birthdate varchar(12);

●테이블 수정 실습 (컬럼 삭제)
alter table EMPLOYEE2
    drop birthdate;

●테이블 수정 (컬럼 수정)
alter table  테이블명
    change  필드명  새필드명 타입 [NULL | NOT NULL][DEFAULT ][AUTO_INCREMENT];

●테이블 이름 변경 실습
alter table EMPLOYEE2
    rename EMPLOYEE3;

●테이블 삭제하기
drop table 테이블이름;






















